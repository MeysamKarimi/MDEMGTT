//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;

namespace MDEMGTT.PetriNet
{
    
    
    /// <summary>
    /// The public interface for LocatedElement
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(LocatedElement))]
    [XmlDefaultImplementationTypeAttribute(typeof(LocatedElement))]
    [ModelRepresentationClassAttribute("http://petrinet/1.0#//LocatedElement")]
    public interface ILocatedElement : IModelElement
    {
        
        /// <summary>
        /// The location property
        /// </summary>
        [DisplayNameAttribute("location")]
        [CategoryAttribute("LocatedElement")]
        [XmlElementNameAttribute("location")]
        [XmlAttributeAttribute(true)]
        string Location
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the Location property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LocationChanging;
        
        /// <summary>
        /// Gets fired when the Location property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> LocationChanged;
    }
}

