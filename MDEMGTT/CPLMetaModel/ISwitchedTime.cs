//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;

namespace MDEMGTT.CPL
{
    
    
    /// <summary>
    /// The public interface for SwitchedTime
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(SwitchedTime))]
    [XmlDefaultImplementationTypeAttribute(typeof(SwitchedTime))]
    [ModelRepresentationClassAttribute("http://cpl/1.0#//SwitchedTime")]
    public interface ISwitchedTime : IModelElement, INodeContainer
    {
        
        /// <summary>
        /// The dtstart property
        /// </summary>
        [DisplayNameAttribute("dtstart")]
        [CategoryAttribute("SwitchedTime")]
        [XmlElementNameAttribute("dtstart")]
        [XmlAttributeAttribute(true)]
        string Dtstart
        {
            get;
            set;
        }
        
        /// <summary>
        /// The dtend property
        /// </summary>
        [DisplayNameAttribute("dtend")]
        [CategoryAttribute("SwitchedTime")]
        [XmlElementNameAttribute("dtend")]
        [XmlAttributeAttribute(true)]
        string Dtend
        {
            get;
            set;
        }
        
        /// <summary>
        /// The duration property
        /// </summary>
        [DisplayNameAttribute("duration")]
        [CategoryAttribute("SwitchedTime")]
        [XmlElementNameAttribute("duration")]
        [XmlAttributeAttribute(true)]
        string Duration
        {
            get;
            set;
        }
        
        /// <summary>
        /// The freq property
        /// </summary>
        [DisplayNameAttribute("freq")]
        [CategoryAttribute("SwitchedTime")]
        [XmlElementNameAttribute("freq")]
        [XmlAttributeAttribute(true)]
        string Freq
        {
            get;
            set;
        }
        
        /// <summary>
        /// The until property
        /// </summary>
        [DisplayNameAttribute("until")]
        [CategoryAttribute("SwitchedTime")]
        [XmlElementNameAttribute("until")]
        [XmlAttributeAttribute(true)]
        string Until
        {
            get;
            set;
        }
        
        /// <summary>
        /// The count property
        /// </summary>
        [DisplayNameAttribute("count")]
        [CategoryAttribute("SwitchedTime")]
        [XmlElementNameAttribute("count")]
        [XmlAttributeAttribute(true)]
        string Count
        {
            get;
            set;
        }
        
        /// <summary>
        /// The interval property
        /// </summary>
        [DisplayNameAttribute("interval")]
        [CategoryAttribute("SwitchedTime")]
        [XmlElementNameAttribute("interval")]
        [XmlAttributeAttribute(true)]
        string Interval
        {
            get;
            set;
        }
        
        /// <summary>
        /// The bySecond property
        /// </summary>
        [DisplayNameAttribute("bySecond")]
        [CategoryAttribute("SwitchedTime")]
        [XmlElementNameAttribute("bySecond")]
        [XmlAttributeAttribute(true)]
        string BySecond
        {
            get;
            set;
        }
        
        /// <summary>
        /// The byMinute property
        /// </summary>
        [DisplayNameAttribute("byMinute")]
        [CategoryAttribute("SwitchedTime")]
        [XmlElementNameAttribute("byMinute")]
        [XmlAttributeAttribute(true)]
        string ByMinute
        {
            get;
            set;
        }
        
        /// <summary>
        /// The byHour property
        /// </summary>
        [DisplayNameAttribute("byHour")]
        [CategoryAttribute("SwitchedTime")]
        [XmlElementNameAttribute("byHour")]
        [XmlAttributeAttribute(true)]
        string ByHour
        {
            get;
            set;
        }
        
        /// <summary>
        /// The byDay property
        /// </summary>
        [DisplayNameAttribute("byDay")]
        [CategoryAttribute("SwitchedTime")]
        [XmlElementNameAttribute("byDay")]
        [XmlAttributeAttribute(true)]
        string ByDay
        {
            get;
            set;
        }
        
        /// <summary>
        /// The byMonthDay property
        /// </summary>
        [DisplayNameAttribute("byMonthDay")]
        [CategoryAttribute("SwitchedTime")]
        [XmlElementNameAttribute("byMonthDay")]
        [XmlAttributeAttribute(true)]
        string ByMonthDay
        {
            get;
            set;
        }
        
        /// <summary>
        /// The byYearDay property
        /// </summary>
        [DisplayNameAttribute("byYearDay")]
        [CategoryAttribute("SwitchedTime")]
        [XmlElementNameAttribute("byYearDay")]
        [XmlAttributeAttribute(true)]
        string ByYearDay
        {
            get;
            set;
        }
        
        /// <summary>
        /// The byWeekNo property
        /// </summary>
        [DisplayNameAttribute("byWeekNo")]
        [CategoryAttribute("SwitchedTime")]
        [XmlElementNameAttribute("byWeekNo")]
        [XmlAttributeAttribute(true)]
        string ByWeekNo
        {
            get;
            set;
        }
        
        /// <summary>
        /// The byMonth property
        /// </summary>
        [DisplayNameAttribute("byMonth")]
        [CategoryAttribute("SwitchedTime")]
        [XmlElementNameAttribute("byMonth")]
        [XmlAttributeAttribute(true)]
        string ByMonth
        {
            get;
            set;
        }
        
        /// <summary>
        /// The wkst property
        /// </summary>
        [DisplayNameAttribute("wkst")]
        [CategoryAttribute("SwitchedTime")]
        [XmlElementNameAttribute("wkst")]
        [XmlAttributeAttribute(true)]
        string Wkst
        {
            get;
            set;
        }
        
        /// <summary>
        /// The bySetPos property
        /// </summary>
        [DisplayNameAttribute("bySetPos")]
        [CategoryAttribute("SwitchedTime")]
        [XmlElementNameAttribute("bySetPos")]
        [XmlAttributeAttribute(true)]
        string BySetPos
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the Dtstart property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DtstartChanging;
        
        /// <summary>
        /// Gets fired when the Dtstart property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DtstartChanged;
        
        /// <summary>
        /// Gets fired before the Dtend property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DtendChanging;
        
        /// <summary>
        /// Gets fired when the Dtend property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DtendChanged;
        
        /// <summary>
        /// Gets fired before the Duration property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DurationChanging;
        
        /// <summary>
        /// Gets fired when the Duration property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> DurationChanged;
        
        /// <summary>
        /// Gets fired before the Freq property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FreqChanging;
        
        /// <summary>
        /// Gets fired when the Freq property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> FreqChanged;
        
        /// <summary>
        /// Gets fired before the Until property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> UntilChanging;
        
        /// <summary>
        /// Gets fired when the Until property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> UntilChanged;
        
        /// <summary>
        /// Gets fired before the Count property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CountChanging;
        
        /// <summary>
        /// Gets fired when the Count property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> CountChanged;
        
        /// <summary>
        /// Gets fired before the Interval property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> IntervalChanging;
        
        /// <summary>
        /// Gets fired when the Interval property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> IntervalChanged;
        
        /// <summary>
        /// Gets fired before the BySecond property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BySecondChanging;
        
        /// <summary>
        /// Gets fired when the BySecond property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BySecondChanged;
        
        /// <summary>
        /// Gets fired before the ByMinute property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ByMinuteChanging;
        
        /// <summary>
        /// Gets fired when the ByMinute property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ByMinuteChanged;
        
        /// <summary>
        /// Gets fired before the ByHour property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ByHourChanging;
        
        /// <summary>
        /// Gets fired when the ByHour property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ByHourChanged;
        
        /// <summary>
        /// Gets fired before the ByDay property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ByDayChanging;
        
        /// <summary>
        /// Gets fired when the ByDay property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ByDayChanged;
        
        /// <summary>
        /// Gets fired before the ByMonthDay property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ByMonthDayChanging;
        
        /// <summary>
        /// Gets fired when the ByMonthDay property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ByMonthDayChanged;
        
        /// <summary>
        /// Gets fired before the ByYearDay property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ByYearDayChanging;
        
        /// <summary>
        /// Gets fired when the ByYearDay property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ByYearDayChanged;
        
        /// <summary>
        /// Gets fired before the ByWeekNo property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ByWeekNoChanging;
        
        /// <summary>
        /// Gets fired when the ByWeekNo property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ByWeekNoChanged;
        
        /// <summary>
        /// Gets fired before the ByMonth property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ByMonthChanging;
        
        /// <summary>
        /// Gets fired when the ByMonth property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ByMonthChanged;
        
        /// <summary>
        /// Gets fired before the Wkst property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> WkstChanging;
        
        /// <summary>
        /// Gets fired when the Wkst property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> WkstChanged;
        
        /// <summary>
        /// Gets fired before the BySetPos property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BySetPosChanging;
        
        /// <summary>
        /// Gets fired when the BySetPos property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> BySetPosChanged;
    }
}

